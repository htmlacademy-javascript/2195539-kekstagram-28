/*Функция для проверки длины строки.
имя_функции('проверяемая строка', 20); // Результат: true - строка проходит по длине
имя_функции('проверяемая строка', 18); // Результат: true - строка проходит по длине
имя_функции('проверяемая строка', 10); // Результат: false — строка не проходит
*/

function getStringLength (string, number) {
  if (string.length <= number) {
    return true;
  }
  return false;
}
getStringLength('проверяемая строка', 20);

/*Функция для проверки, является ли строка палиндромом.
имя_функции('топот'); // Результат: true - строка является палиндромом
имя_функции('ДовОд'); // Результат: true - несмотря на разный регистр, тоже палиндром
имя_функции('Кекс');  // Результат: false - это не палиндром
имя_функции('Лёша на полке клопа нашёл '); // Результат: true - это палиндром
*/

function isPalidrome(string) {
  string = string.toLowerCase().replace(/\s/g,''); //нижний регистр, глобальный поиск пробелов и замена на пустоту.
  return string === string.split('').reverse().join(''); //массив, реверс массива, разделитель пустая строка.
}
isPalidrome('топот');

/*Функция, которая принимает строку, извлекает содержащиеся в ней цифры от 0 до 9
и возвращает их в виде целого положительного числа.
имя_функции('2023 год');            // Результат: число 2023
имя_функции('ECMAScript 2022');     // Результат: число 2022
имя_функции('1 кефир, 0.5 батона'); // Результат: число 105
имя_функции('а я томат');           // Результат: NaN
*/

function getNumbers (string) {
  let newNumber = '';
  if(string === Number(string)) {
    return Math.abs(string);
  } else {
    for(let i = 0; i < string.length; i++){
      if(string[i] == Number(string[i]) && string[i] !== ' ') {
        newNumber += string[i];
      }
    }
    if(newNumber === ''){
      return NaN;
    }
    return Number(newNumber);
  }
}
getNumbers('1 кефир, 0.5 батона');

/*
Функция, которая принимает три параметра:
- исходную строку,
- минимальную длину,
- строку с добавочными символами
Возвращает исходную строку,дополненную указанными символами до заданной длины.
Символы добавляются в начало строки.
Если исходная строка превышает заданную длину, она не должна обрезаться.
Если «добивка» слишком длинная, она обрезается с конца.
*/
